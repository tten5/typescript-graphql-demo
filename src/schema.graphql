type Query {
	info: String!
  	feed(filter: String, skip: Int, take: Int, orderBy: LinkOrderByInput): Feed!
}

# For sorting 
input LinkOrderByInput {
  description: Sort
  url: Sort
  createdAt: Sort
}

enum Sort {
  asc
  desc
}

type Feed {
  links: [Link!]!
  count: Int!
}

type Mutation {
  	post(url: String!, description: String!): Link!
  	signup(email: String!, password: String!, name: String!): AuthPayload
  	login(email: String!, password: String!): AuthPayload
	vote(linkId: Int!): Vote
}

# even though id is created auto 
# but still need to include it here
type Link {
  	id: ID! 
  	description: String!,
  	url: String!
	postedBy: User
	votes: [Vote!]!
}

type AuthPayload {
	token: String
	user: User
}

# NO PASSWORD so that frontend cannot access it
type User {
	id: ID!
	name: String!
	email: String!
	links: [Link!]!
}

type Subscription {
  	newLink: Link,
	newVote: Vote
}

type Vote {
	id: ID!
	link: Link!
  	user: User!
}



